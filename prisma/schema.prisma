datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String  @id @default(cuid())
  email    String? @unique
  username String? @unique
  sl_id    String? @unique
  provider String?

  //TODO:This should have default but removed for insertion
  createdAt DateTime?

  insertedAt DateTime         @default(now())
  imageUrl   String?
  verified   Boolean          @default(false)
  verifiedAt DateTime?
  fromCiv    Boolean          @default(false)
  videos     Video[]
  images     Image[]
  engagement UserEngagement[]
}

model Video {
  id          String   @id @default(cuid())
  videoId     String   @unique
  tags        Tag[] // Many-to-many relation
  publishedAt DateTime
  updatedAt   DateTime
  asset       Asset?
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String

  @@index([createdById])
}

model Tag {
  id     String  @id @default(cuid())
  name   String  @unique
  videos Video[]
}

model Asset {
  id        String @id @default(cuid())
  iframe    String
  player    String
  hls       String
  thumbnail String
  mp4       String
  videoId   String @unique
  video     Video  @relation(fields: [videoId], references: [id])
}

enum NSFWLevel {
  X
  Mature
  Soft
  None
  ADD
}

model Image {
  id         String     @id @default(cuid())
  remoteId   Int        @unique
  videoId    String     @unique
  url        String?
  hash       String?
  width      Int?
  height     Int?
  nsfwLevel  NSFWLevel?
  nsfw       Boolean?
  createdAt  DateTime?
  insertedAt DateTime   @default(now())
  postId     Int?
  username   String?
  user       User?      @relation(fields: [username], references: [username])

  // Fields from Stats
  laughCount   Int?
  likeCount    Int?
  heartCount   Int?
  commentCount Int?
  stats        Json // Stats as JSON string

  category Int?
  // Fields from Meta
  model    String?
  meta     Json // Meta as JSON string

  engagement UserEngagement[]
}

model UserEngagement {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  userId       String
  imageId      String
  liked        Boolean  @default(false)
  bookmarked   Boolean  @default(false)
  playCount    Int      @default(0)
  playDuration Int      @default(0)
  user         User     @relation(fields: [userId], references: [id])
  image        Image    @relation(fields: [imageId], references: [id])

  @@unique([userId, imageId], name: "userId_imageId")
}
